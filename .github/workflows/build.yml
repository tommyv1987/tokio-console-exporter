name: Build Linux Binary

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  release:
    types: [published]

jobs:
  build:
    runs-on: ubuntu-22.04
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        target: x86_64-unknown-linux-gnu
        override: true

    - name: Cache dependencies
      uses: actions/cache@v3
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-cargo-

    - name: Build release binary
      run: |
        cd tokio-console-prometheus-exporter
        cargo build --release --target x86_64-unknown-linux-gnu

    - name: Create release directory
      run: |
        mkdir -p release
        cp tokio-console-prometheus-exporter/target/x86_64-unknown-linux-gnu/release/tokio-console-prometheus-exporter release/
        cp tokio-console-exporter.service release/
        cp -r monitoring release/
        cp README.md release/

    - name: Create archive
      run: |
        cd release
        tar -czf tokio-console-prometheus-exporter-linux-x86_64.tar.gz *
        cd ..

    - name: Upload artifact
      uses: actions/upload-artifact@v3
      with:
        name: tokio-console-prometheus-exporter-linux-x86_64
        path: release/tokio-console-prometheus-exporter-linux-x86_64.tar.gz
        retention-days: 30

    - name: Create release on tag
      if: startsWith(github.ref, 'refs/tags/')
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./release/tokio-console-prometheus-exporter-linux-x86_64.tar.gz
        asset_name: tokio-console-prometheus-exporter-linux-x86_64.tar.gz
        asset_content_type: application/gzip 